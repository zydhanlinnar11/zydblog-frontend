@use '../tokens/window-class.scss' as window;
@use '../tokens/layout.scss';
@use 'sass:map';

$row-gap: 24px;

.container {
  $padding: 16px;

  padding: $padding;
  display: flex;
  flex-direction: column;
  row-gap: $row-gap;
  max-width: 1024px;

  &__wrapper {
    display: flex;
    justify-content: center;
    min-height: 100vh;
    margin-bottom: 80px;

    @media (min-width: map.get(window.$screens, 'medium')) {
      margin-bottom: 0;
      margin-left: 80px;
    }
  }

  @media (min-width: map.get(window.$screens, 'expanded')) {
    @include layout.padding-y(24px);
  }
}

.main {
  display: flex;
  flex-direction: column;
  row-gap: $row-gap;
}

.header {
  background-color: rgb(var(--md-sys-color-surface-container));
  color: rgb(var(--md-sys-color-on-surface-container));
  border-radius: 24px;

  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 16px;
  row-gap: 8px;
  width: 100%;
  text-align: center;

  @media (min-width: map.get(window.$screens, 'expanded')) {
    @include layout.padding-y(56px);
    @include layout.padding-x(128px);
    row-gap: 12px;
  }

  &__logo {
    position: relative;
    width: 64px;
    height: 64px;

    @media (min-width: map.get(window.$screens, 'expanded')) {
      width: 128px;
      height: 128px;
    }
  }
}

.section {
  display: flex;
  flex-direction: column;
  padding: 0px;
  row-gap: 16px;

  @media (min-width: map.get(window.$screens, 'expanded')) {
    row-gap: 24px;
  }
}

.favoriteLanguagesAndTools {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 10px;
  width: 100%;
  flex-wrap: wrap;

  &__item {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 16px;
    gap: 8px;
    width: 88px;
    height: fit-content;

    background-color: rgb(var(--md-sys-color-surface-container));
    border-radius: 8px;

    @media (min-width: map.get(window.$screens, 'expanded')) {
      padding: 32px;
      width: 140px;
    }

    transition-property: scale;
    transition-duration: var(--md-sys-motion-duration-medium2);
    transition-timing-function: var(--md-sys-motion-easing-standard);
    &:hover {
      scale: 1.05;
    }
  }

  &__icon {
    width: 32px;
    height: 32px;
    position: relative;

    @media (min-width: map.get(window.$screens, 'expanded')) {
      width: 48px;
      height: 48px;
    }
  }
}

.listSection {
  &__item {
    padding: 8px;
    color: rgb(var(--md-sys-color-on-surface-variant));
    transition-property: scale;
    transition-duration: var(--md-sys-motion-duration-medium2);
    transition-timing-function: var(--md-sys-motion-easing-standard);

    &:hover,
    &:focus,
    &:active {
      scale: 1.02;
    }
  }

  &__title {
    color: rgb(var(--md-sys-color-on-surface));
  }
}

.experiences {
  &__item {
    display: grid;
    grid-template-columns: 1fr;

    @media (min-width: map.get(window.$screens, 'medium')) {
      grid-template-columns: auto auto;
      grid-template-rows: auto auto;
    }
  }

  &__date {
    margin-top: 8px;
  }

  @media (min-width: map.get(window.$screens, 'medium')) {
    &__title {
      grid-row: 1 / 1;
    }

    &__description {
      grid-row: 2 / -1;
    }

    &__date {
      grid-column: 2;
      grid-row: span 2;
      margin-top: 0;
    }
  }
}

.repo {
  &__topics {
    display: flex;
    gap: 8px;
    flex-wrap: wrap;
    margin-top: 8px;
  }

  &__topic {
    border-radius: 8px;
    padding: 6px 12px;
    background-color: rgb(var(--md-sys-color-secondary-container));
    color: rgb(var(--md-sys-color-on-secondary-container));
  }
}

.spinner {
  $duration: 1.75s;
  animation: rotate $duration linear infinite;

  @keyframes rotate {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(270deg);
    }
  }
  &__path {
    transform-origin: center;
    stroke: rgb(var(--md-sys-color-primary-container));
    animation: dash $duration var(--md-sys-motion-easing-standard) infinite;
    $offset: 122;
    stroke-dasharray: $offset;
    stroke-dashoffset: 0;

    @keyframes dash {
      0% {
        stroke-dashoffset: $offset;
      }
      50% {
        stroke-dashoffset: $offset/4;
        transform: rotate(135deg);
      }
      100% {
        stroke-dashoffset: $offset;
        transform: rotate(450deg);
      }
    }
  }
}

.errorLoadingContainer {
  display: flex;
  @include layout.center-xy;
  width: 100%;
}
